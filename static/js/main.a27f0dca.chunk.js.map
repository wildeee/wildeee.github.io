{"version":3,"sources":["Header/Menu.jsx","Header/Bar.jsx","Header/index.jsx","Header/menuNamer.js","Home/index.jsx","About/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Menu","setRoute","route","_this","props","onRouteChange","classes","this","react_default","a","createElement","Drawer_default","open","onClose","List_default","className","menuList","ListItem_default","button","onClick","ListItemText_default","primary","PureComponent","withStyles","minWidth","Bar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setMenuOpen","isOpen","setState","menuOpen","state","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","Menu_default","Typography_default","currentMenuName","variant","title","Header_Menu","margin","left","Header","location","pathname","history","push","menuTitle","menuNamer","Header_Bar","Home","About","App","HashRouter","Route","path","component","exact","Component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a27f0dca.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst style = {\r\n  menuList: {\r\n    minWidth: 150,\r\n  },\r\n};\r\n\r\nclass Menu extends PureComponent {\r\n\r\n  setRoute = route => () => {\r\n    this.props.onRouteChange(route);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Drawer open={this.props.open} onClose={this.props.onClose}>\r\n        <List className={classes.menuList}>\r\n          <ListItem button onClick={this.setRoute('/')}>\r\n            <ListItemText primary=\"Home\"/>\r\n          </ListItem>\r\n          <ListItem button onClick={this.setRoute('/about')}>\r\n            <ListItemText primary=\"Sobre\"/>\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n\r\nMenu.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func,\r\n  onRouteChange: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(style)(Menu);","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from './Menu';\r\n\r\nconst styles = {\r\n  currentMenuName: {\r\n    margin: '0 auto',\r\n  },\r\n  menuButton: {\r\n    position: 'absolute',\r\n    left: 12,\r\n  },\r\n};\r\n\r\nclass Bar extends PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      menuOpen: false,\r\n    };\r\n  }\r\n\r\n  setMenuOpen = isOpen => () => {\r\n    this.setState({ menuOpen: isOpen });\r\n  };\r\n\r\n  onRouteChange = route => {\r\n    this.setState({ menuOpen: false });\r\n    this.props.onRouteChange(route);\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} onClick={this.setMenuOpen(true)}>\r\n            <MenuIcon/>\r\n          </IconButton>\r\n          <Typography\r\n            className={classes.currentMenuName}\r\n            variant=\"h5\"\r\n          >\r\n            { this.props.title }\r\n          </Typography>\r\n        </Toolbar>\r\n        <Menu\r\n          open={this.state.menuOpen}\r\n          onClose={this.setMenuOpen(false)}\r\n          onRouteChange={this.onRouteChange}\r\n        />\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nBar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  onRouteChange: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(Bar);\r\n","import React, { PureComponent } from 'react';\r\nimport Bar from './Bar';\r\nimport menuNamer from './menuNamer';\r\n\r\nclass Header extends PureComponent {\r\n\r\n  onRouteChange = route => {\r\n    if (route !== this.props.location.pathname) {\r\n      this.props.history.push(route);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const menuTitle = menuNamer(this.props.location.pathname);\r\n    return (\r\n      <Bar\r\n        title={menuTitle}\r\n        onRouteChange={this.onRouteChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","export default (route) => {\r\n  switch(route) {\r\n    case '/about':\r\n      return 'Sobre mim';\r\n    default:\r\n      return 'Bem vindo!!!';\r\n  }\r\n};","import React, { PureComponent } from 'react';\r\n\r\nclass Home extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div>\r\n        At home, drawing pictures of montain tops...\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { PureComponent } from 'react';\r\n\r\nclass About extends PureComponent {\r\n  render() {\r\n    return (\r\n      <h2>\r\n        Em breve...\r\n      </h2>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Header from './Header';\nimport Home from './Home';\nimport About from './About';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route path=\"/\" component={Header}/>\n          <Route path=\"/\" exact component={Home}/>\n          <Route path=\"/about\" exact component={About}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}